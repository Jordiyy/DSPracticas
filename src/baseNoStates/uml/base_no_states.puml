@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0

class Webserver {
    - {static} PORT :int
    - {static} FORMATTER : DateTimeFormatter
    + Webserver()
}

class SocketThread {
    - insocked : Socked
    - makeRequest(tokens : String[]) : Request
    - makeRequestReader(tokens : String[]) : RequestReader
    - makeRequestArea(tokens : String[]) : RequestArea
    - makeHeaderAnswer() : String
    - makeJsonAnswer(request : Request) : String
    + run()
}

Webserver +-right- SocketThread

note right of SocketThread
inner class
of Webserver
end note

class DirectoryDoors {
    - {static} allDoors : Door[]
    + {static} makeDoors()
    + {static} findDoorById(id : String) : Door
    + {static} getAllDoors() : Door[]
}

note right of DirectoryDoors
se borra mas adelante
end note

DirectoryDoors --> "*" Door : "allDoors"

class DirectoryUsers {
    - {static} users : User[]
    + {static} makeUsers()
    + {static} findUserByCredential(credential : String) : User
}

DirectoryUsers --> "*" User : "users"

class DirectoryAreas {
    - {static} allDoors : List<Door>
    - {static} rootArea : Area
    + {static} makeAreas() : void
    + {static} findAreaById(areaId : String) : Area
}

note right of DirectoryAreas
se borra variables rootArea y allDoors ??
end note

DirectoryAreas --> Area : rootArea

class Door {
    - id : String
    - closed : boolean
    - to : Space
    - from : Space
    + Door(id : String, to : Space, from : Space)
    + processRequest(request : RequestReader) : void
    + setState(doorState : DoorState) : void
    + toJson() : JSONObject
    + toString() : String
    + isClosed() :boolean
    + getId() : String
    '+ setClosed(b : boolean)
    + getStateName() : String
    - doAction(action : String) : void
}

DirectoryAreas --> "*" Door : allDoors

class User {
    - name : String
    - credential : String
    + User(name: String, credential: String)
    + toString() : String
}

Door --> "1" DoorState : doorState

abstract class DoorState {
    # door : Door
    # name : String
    # isClosed : boolean
    + open() : void
    + close() : void
    + getName() : String
    + getIsClose() : boolean
    + {abstract} lock() : void
    + {abstract} unlock() : void
    '+ {abstract} unlockShortly() : void
}

class Locked extends DoorState {
    + Locked(door : Door)
    + unlock() : void
}

class Unlocked extends DoorState {
    + Unlocked(door : Door)
    + lock() : void
}

abstract class Area {
    # id : String
    # descripcion : String
    # partitionDad : Partition
    + Area(id : String, descripcion : String, partitionDad : Partition)
    + getId() : String
    + {abstract} getDoorsGivingAccess() : List<Door>
    + {abstract} findAreaById(id : String) : Area
    + {abstract} getSpaces() : Space[]
}

class Partition extends Area {
    - allAreas : List<Area>
    + Partition(id : String, descripcion : String, partitionDad : Partition)
    + setAllAreas(area : ArrayList<Area>) : void
    + setArea(area: Area) : void
    + getDoorsGivingAccess() : List<Door>
    + findAreaById(id : String) : Area
    + getSpaces() : Space[]
}

class Space extends Area {
    - allDoors : List<Door>
    + setDoors(doors : ArrayList<Door>) : void
    + getAllDoors() : List<Door>
    + setOneDoor(door : Door) : void
    + getDoorsGivingAccess() : List<Door>
    + findAreaById(id : String) : Area
    + getSpaces() : Space[]
}

class Main {
    + {static} main(args : String)
}

note right of Main::main
DirectoryDoors.makeDoors()
DiretoryUsers.makeUsers()
new Webserver()
end note

Main -[hidden]down- Webserver
Webserver -[hidden]down- DirectoryDoors
DirectoryDoors -[hidden]right- DirectoryUsers
@enduml
